81. Find Median from Data Stream
中文English
Numbers keep coming, return the median of numbers at every time a new number added.

Example
Example 1

Input: [1,2,3,4,5]
Output: [1,1,2,2,3]
Explanation:
The medium of [1] and [1,2] is 1.
The medium of [1,2,3] and [1,2,3,4] is 2.
The medium of [1,2,3,4,5] is 3.
Example 2

Input: [4,5,1,3,2,6,0]
Output: [4,4,4,3,3,3,3]
Explanation:
The medium of [4], [4,5], [4,5,1] is 4.
The medium of [4,5,1,3], [4,5,1,3,2], [4,5,1,3,2,6] and [4,5,1,3,2,6,0] is 3.
Challenge
Total run time in O(nlogn).

Clarification
What's the definition of Median?

The median is not equal to median in math.
Median is the number that in the middle of a sorted array. If there are n numbers in a sorted array A, the median is A[(n - 1) / 2]A[(n−1)/2].
For example, if A=[1,2,3], median is 2. If A=[1,19], median is 1.


public class Solution {
    /**
     * @param nums: A list of integers
     * @return: the median of numbers
     */
    public int[] medianII(int[] nums) {
        // write your code here
    }
}



//Joel
public class Solution {
    /**
     * @param nums: A list of integers
     * @return: the median of numbers
     */
    public int[] medianII(int[] nums) {
        if (nums == null || nums.length == 0) {
		   return new int[0];
		}
		
		PriorityQueue<Integer> maxHeap = new PriorityQueue<>(Collections.reverseOrder());
		//储存左半部分
		PriorityQueue<Integer> minHeap = new PriorityQueue<>();
		//储存右半部分
		
		int[] result = new int[nums.length];
		
		for (int i = 0; i < nums.length; i++) {
		   maxHeap.offer(nums[i]);
		   minHeap.offer(maxHeap.poll());
		   if (minHeap.size() - maxHeap.size() > 0) {
		      maxHeap.offer(minHeap.poll());
		   }
		   result[i] = maxHeap.peek();
		}
		
		return result;
    }
}