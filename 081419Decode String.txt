575. Decode String
??English
Given an expression s contains numbers, letters and brackets. Number represents the number of repetitions inside the brackets(can be a string or another expression).Please expand expression to be a string.

Example
Example1

Input: S = abc3[a]
Output: "abcaaa"
Example2

Input: S = 3[2[ad]3[pf]]xyz
Output: "adadpfpfpfadadpfpfpfadadpfpfpfxyz"
Challenge
Can you do it without recursion?

Notice
Numbers can only appear in front of “[]”.

//Daniel
public class Solution {
    /**
     * @param s: an expression includes numbers, letters and brackets
     * @return: a string
     */
    public String expressionExpand(String s) {
        
    }
}


//Joel
public class Solution {
    /**
     * @param s: an expression includes numbers, letters and brackets
     * @return: a string
     */
    public String expressionExpand(String s) {
        Stack<Object> stack = new Stack<>();
		int number = 0;
		
		for (char c : s.toCharArray()) {
		   if (Character.isDigit(c)) {
		       number = number * 10 + c - '0';
		   } else if (c == '[') {
		       stack.push(Integer.valueOf(number));
			   number = 0;
		   } else if (c == ']') {
		       String temp = helper(stack);
			   Integer count = (Integer) stack.pop();
			   for (int i = 0; i < count; i++) {
			      stack.push(temp);
			   }
		   } else {
		      stack.push(String.valueOf(c));
		   }
		}
		
		return helper(stack);
    }
	
	private String helper(Stack<Object> stack) {
	    String temp = "";
		while (!stack.isEmpty() && stack.peek() instanceof String) {
		    temp = stack.pop() + temp;
		}
		return temp;
	}
}