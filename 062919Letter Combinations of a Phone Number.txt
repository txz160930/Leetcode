425. Letter Combinations of a Phone Number
??English
Given a digit string excluded '0' and '1', return all possible letter combinations that the number could represent.

A mapping of digit to letters (just like on the telephone buttons) is given below.

1	2
ABC	3
DEF
4
GHI	5
JKL	6
MNO
7
PQRS	8
TUV	9
WXYZ
Example
Example 1:

Input: "23"
Output: ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"]
Explanation: 
'2' could be 'a', 'b' or 'c'
'3' could be 'd', 'e' or 'f'
Example 2:

Input: "5"
Output: ["j", "k", "l"]
Notice
Although the answer above is in lexicographical order, your answer could be in any order you want.


public class Solution {
    /**
     * @param digits: A digital string
     * @return: all posible letter combinations
     */
    private static final String[] Key = { "", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz" };
    public List<String> letterCombinations(String digits) {
    	List<String> res = new ArrayList<>();
	    if(digits.length() <= 0) return res;
	    combine("", res, digits, 0);
        return res;
    }
    public void combine(String prefix, List<String> res, String digits, int offset){
        if(offset >= digits.length()){
            res.add(prefix);
            return;
        }
        String letter = Key[digits.charAt(offset) - '0'];
        for(int i = 0; i < letter.length(); i ++){
            combine(prefix + letter.charAt(i), res, digits, offset + 1);
        }
    }
	
}
