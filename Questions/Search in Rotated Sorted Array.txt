62. Search in Rotated Sorted Array
??English
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

Example
Example 1:

Input: [4, 5, 1, 2, 3] and target=1, 
Output: 2.
Example 2:

Input: [4, 5, 1, 2, 3] and target=0, 
Output: -1.
Challenge
O(logN) time


public class Solution {
    /**
     * @param A: an integer rotated sorted array
     * @param target: an integer to be searched
     * @return: an integer
     */
    public int search(int[] A, int target) {
	    if (A == null || A.length == 0) {
		   return -1;
		}
        int start = 0;
		int end = A.length - 1;
		while (start + 1 < end) {
		    int mid = start + (end - start) / 2;
			if (target > A[A.length - 1]) {
			   if (A[mid] <= A[A.length - 1]) {
			      end = mid;
			   } else if (A[mid] >= target) {
			      end = mid;
			   } else if (A[mid] < target && A[mid] > A[A.length - 1]) {
			      start = mid;
			   }
			} else {
			   if (A[mid] > target && A[mid] <= A[A.length - 1]) {
			      end = mid;
			   } else if (A[mid] <= target) {
			      start = mid;
			   } else if (A[mid] > A[A.length - 1]) {
			      start = mid;
			   }
			}
		}
		
		if (A[start] == target) {
		   return start;
		}
		if (A[end] == target) {
		   return end;
		}
		
		return -1;
    }
}