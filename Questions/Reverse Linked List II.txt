36. Reverse Linked List II
??English
Reverse a linked list from position m to n.

Example
Example 1:

Input: 1->2->3->4->5->NULL, m = 2 and n = 4, 
Output: 1->4->3->2->5->NULL.
Example 2:

Input: 1->2->3->4->NULL, m = 2 and n = 3, 
Output: 1->3->2->4->NULL.
Challenge
Reverse it in-place and in one-pass

Notice
Given m, n satisfy the following condition: 1 = m = n = length of list.


/**
 * Definition for ListNode
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */

public class Solution {
    /**
     * @param head: ListNode head is the head of the linked list 
     * @param m: An integer
     * @param n: An integer
     * @return: The head of the reversed ListNode
     */
    public ListNode reverseBetween(ListNode head, int m, int n) {
        if (head == null || head.next == null) {
		    return head;
		}

		//利用一个哨兵节点
		ListNode dummy = new ListNode(0);
		dummy.next = head;
		head = dummy;
	    
		//找第一个比m小的节点
		for (int i = 1; i < m; i++) {
		   head = head.next;
		}
		
		//反转链表
		ListNode mNode = head.next;
		ListNode prePostNode = mNode;
		ListNode postNode = mNode.next;
		mNode.next = null;
		
		for (int i = m; i < n; i++) {
		    ListNode postPostNode = postNode.next;
			postNode.next = prePostNode;
			prePostNode = postNode;
			postNode = postPostNode;
		}
		
		head.next = prePostNode;
		mNode.next = postNode;
	    
		return dummy.next;
    }
}