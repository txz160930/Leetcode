62. Search in Rotated Sorted Array
??English
Suppose a sorted array is rotated at some pivot unknown to you beforehand.

(i.e., 0 1 2 4 5 6 7 might become 4 5 6 7 0 1 2).

You are given a target value to search. If found in the array return its index, otherwise return -1.

You may assume no duplicate exists in the array.

Example
Example 1:

Input: [4, 5, 1, 2, 3] and target=1, 
Output: 2.
Example 2:

Input: [4, 5, 1, 2, 3] and target=0, 
Output: -1.
Challenge
O(logN) time

//Daniel's code
// 因為是要 O(logN)，所以必須要用 binary search

public int search(int[] A, int target) {
        if (A == null || A.length == 0) {
            return -1;
        }
        int lo = 0;
        int hi = A.length - 1;
        while (lo < hi) {
        //先找出中間值
            int mid = (lo + hi) / 2;
            if (A[mid] == target) return mid;
            if (A[lo] <= A[mid]) {
            //中間往左
                if (target >= A[lo] && target < A[mid]) {
                    hi = mid - 1;
                } else {
                    lo = mid + 1;
                }
            } else {
            //中間往右
                if (target > A[mid] && target <= A[hi]) {
                    lo = mid + 1;
                } else {
                    hi = mid - 1;
                }
            }
        }
        if(A[lo] == target){
            return lo;
        }else{
            return -1;
        }
   }

public class Solution {
    /**
     * @param A: an integer rotated sorted array
     * @param target: an integer to be searched
     * @return: an integer
     */
    public int search(int[] A, int target) {
        // write your code here
    }
}
