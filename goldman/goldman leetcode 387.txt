Given a string, find the first non-repeating character in it and return it's index. If it doesn't exist, return -1.

Examples:

s = "leetcode"
return 0.

s = "loveleetcode",
return 2.

class Solution {
    public int firstUniqChar(String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        for(int i =  0; i < s.length(); i++){
            if(map.containsKey(s.charAt(i))){
                map.put(s.charAt(i),map.get(s.charAt(i))+1);
            }else{
                map.put(s.charAt(i), 1);
            }
        }
        for(int i = 0; i < s.length(); i++){
            if(map.get(s.charAt(i)) == 1){
                return i;
            }
        }
        return -1;
    }
}


//直接用char的ascii码
class Solution {
    public int firstUniqChar(String s) {
        int[] characters = new int[256];
        for (int i =  0; i < s.length(); i++) {
            characters[s.charAt(i)] += 1;
        }

        for (int i =  0; i < s.length(); i++) {
            if (characters[s.charAt(i)] == 1) {
                return i;
            }
        }

        return -1;
    }
}
